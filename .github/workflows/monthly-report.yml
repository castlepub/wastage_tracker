name: Monthly Wastage Report

on:
  schedule:
    - cron: '0 6 1 * *'  # Run at 6 AM UTC on the first day of each month
  workflow_dispatch:
    inputs:
      report_date:
        description: 'Report date (YYYY-MM-DD format). Leave empty for last month.'
        required: false
        type: string

permissions:
  issues: write
  contents: read

jobs:
  generate-report:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm ci
        ls -la scripts/

    - name: Generate report
      env:
        APP_URL: ${{ secrets.APP_URL }}
        EXPORT_TOKEN: ${{ secrets.EXPORT_TOKEN }}
        REPORT_DATE: ${{ inputs.report_date }}
      run: |
        echo "Running monthly report script..."
        node scripts/monthly-report.js > report.txt
        cat report.txt

    - name: Create Issue with Report
      if: success()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          try {
            const reportContent = fs.readFileSync('report.txt', 'utf8');
            const today = new Date().toISOString().split('T')[0];
            const reportDate = '${{ inputs.report_date }}' || 'last-month';
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Monthly Wastage Report - ${reportDate === 'last-month' ? today : reportDate}`,
              body: '```\n' + reportContent + '\n```',
              labels: ['report', 'monthly', 'automated']
            });
            console.log('✅ Issue created successfully');
          } catch (error) {
            console.error('❌ Failed to create issue:', error.message);
            // Don't fail the workflow, just log the error
            core.setFailed(`Failed to create issue: ${error.message}`);
          } 